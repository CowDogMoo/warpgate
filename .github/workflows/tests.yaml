---
name: Run Go Tests and Send Coverage Report
on:
  merge_group:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
  push:
    branches:
      - main
  schedule:
    # Runs every Sunday at 4 AM (see https://crontab.guru)
    - cron: "0 4 * * 0"
  workflow_dispatch:

env:
  GO_VERSION: 1.24.0
  PYTHON_VERSION: 3.12.6

permissions:
  actions: read
  checks: write
  contents: read
  security-events: write # Required for GitHub Security tab

jobs:
  tests:
    name: Run tests and determine code coverage %
    runs-on: ubuntu-latest
    steps:
      - name: Setup git repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential \
                                  btrfs-progs \
                                  fuse-overlayfs \
                                  libgpgme-dev \
                                  libbtrfs-dev \
                                  pkg-config \
                                  slirp4netns \
                                  uidmap
          export XDG_RUNTIME_DIR=/run/user/$(id -u)
          export XDG_CONFIG_HOME=/root/.config
          export XDG_DATA_HOME=/root/.local/share
          echo "export XDG_RUNTIME_DIR=/run/user/$(id -u)" >> $GITHUB_ENV
          echo "export XDG_CONFIG_HOME=/root/.config" >> $GITHUB_ENV
          echo "export XDG_DATA_HOME=/root/.local/share" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true
          cache-dependency-path: |
            **/go.sum
            test/go.sum

      - name: Ensure dependencies are up to date
        run: go mod tidy

      - name: Set git config
        run: |
          git config --global user.name "John Doe"
          git config --global user.email johndoe@example.com

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install python dependencies (required for tests)
        run: python3 -m pip install ansible

      - name: Generate the coverage output
        run: |
          bash .hooks/run-go-tests.sh coverage

      - name: Send the coverage output
        uses: shogo82148/actions-goveralls@e6875f831db61e6abffbd8df91a2eb6cd24b46c9 # v1
        with:
          path-to-profile: coverage-all.out
