---
name: Container Image Builder
on:
  pull_request:
  push:
    branches: [main, container]

env:
  PRODUCT_VERSION: "latest"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: set-matrix
        run: |
          BLUEPRINTS_JSON=$(find blueprints -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | awk NF | jq -R -c '[split("\n")[] | select(length > 0) | {blueprint: .}]')
          BLUEPRINTS_JSON_ESCAPED=$(echo "$BLUEPRINTS_JSON" | jq @uri)
          echo "MATRIX_JSON=$BLUEPRINTS_JSON_ESCAPED" >> $GITHUB_ENV
          echo "matrix=${BLUEPRINTS_JSON_ESCAPED}" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.BOT_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.0"
          cache-dependency-path: "**/*.sum"

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.PRODUCT_VERSION }}

      - name: Set up warpgate
        run: |
          go mod tidy
          go build -o wg
          sudo mv wg /usr/local/bin/wg

      - name: Clone ansible-collection-workstation
        run: |
          mkdir -p $HOME/cowdogmoo
          git clone https://github.com/CowDogMoo/ansible-collection-workstation.git $HOME/cowdogmoo/ansible-collection-workstation

      - name: Make repository name lowercase
        run: |
          echo "repo_owner=$(echo 'ghcr.io/${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Run image builder for blueprint
        run: |
          blueprint=${{ matrix.blueprints }}
          echo "Processing blueprint: $blueprint"
          wg imageBuilder \
            -b "$blueprint" \
            -p "$HOME/cowdogmoo/ansible-collection-workstation" \
            -t "${{ secrets.BOT_TOKEN }}"

      - name: Setup tmate session for debugging
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true
        if: failure()

      - name: Push image
        run: |
          blueprint=${{ matrix.blueprints }}
          docker push ${{ env.repo_owner }}/${blueprint,,}:latest
